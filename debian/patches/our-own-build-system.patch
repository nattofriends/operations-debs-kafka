From: Alexandros Kosiaris <akosiaris@wikimedia.org>, Andrew Otto <otto@wikimedia.org>
Date: Tue, 28 May 2013 17:46:15 +0000
Subject: Introducing our own build system

Introducing our own build system for the kafka project based on
calling scalac and a set of simple Makefiles. Will compile per
directory {core, perf, examples}, install configuration
files and depend on either system provided JAR libraries or the
ones shipped in ext/. Install targets by default go to
/usr/local/share/java, packaging system will probably override that.
It supports PREFIX, DESTDIR, SYSCONFDIR.
CLASSPATH variable is meant to be overriden more by the caller. Some
sane defaults are discovered but they should not be relied on too much.
The version discovery system is rather naive and will fail in many
cases to correctly identify the version. Since this is not trivial to
fix we allow the caller to override version.

Updated for 0.8.2.1 on 2015-07-28 by Andrew Otto.
---
 Makefile                         | 66 ++++++++++++++++++++++++++++++++++++++++
 clients/Makefile                 | 18 +++++++++++
 config/Makefile                  | 15 +++++++++
 core/Makefile                    | 21 +++++++++++++
 9 files changed, 220 insertions(+)
 create mode 100644 Makefile
 create mode 100644 clients/Makefile
 create mode 100644 config/Makefile
 create mode 100644 core/Makefile

diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..cf05093
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,65 @@
+export SCALAC=scalac
+export JAVAC=javac
+export MKDIR_P=mkdir -p
+export RM_RF=rm -rf
+export JAR=jar
+export INSTALL=install -D -m 644
+
+# Figure this out as well as other dependencies
+
+# DESTDIR
+ifndef PREFIX
+export PREFIX=/usr/local
+endif
+ifndef SYSCONFDIR
+export SYSCONFDIR=/usr/local/etc/kafka
+endif
+export LIBPATH=$(PREFIX)/share/kafka
+export DESTDIR
+
+# Release specifics
+tag=$(shell git describe --abbrev=0)
+ver=$(shell echo $(tag) | sed -e 's/kafka-//' -e 's/-incubating-candidate-[0-9]//')
+ifndef VERSION
+export VERSION=$(ver)
+endif
+
+# This is a fallback in case CLASSPATH is not defined by the caller
+# It will find and add to the CLASSPATH variable all jars in $(PREFIX)/usr/share
+# Hopefully CLASSPATH will be defined and this will be unused
+SYS_CLASSDIR:=$(PREFIX)/share/java
+SYS_CLASSJARS:=$(shell find $(SYS_CLASSDIR) -name "*.jar")
+export SYS_CLASSPATH:=$(shell echo $(SYS_CLASSJARS) | sed -e 's/ /:/g')
+
+# Same here, just this is done for the shipped jar dependencies.
+EXT_CLASSDIR:=$(CURDIR)/ext
+EXT_CLASSJARS:=$(shell find $(EXT_CLASSDIR) -name "*.jar")
+export EXT_CLASSPATH:=$(shell echo $(EXT_CLASSJARS) | sed -e 's/ /:/g')
+
+ifndef CLASSPATH
+export CLASSPATH=$(SYS_CLASSPATH):$(EXT_CLASSPATH)
+endif
+export CFLAGS=-usejavacp
+
+# Don't bother building examples as part of main build process.
+SUBDIRS=clients core config
+
+BUILDDIRS=$(SUBDIRS:%=build-%)
+CLEANDIRS=$(SUBDIRS:%=clean-%)
+INSTALLDIRS=$(SUBDIRS:%=install-%)
+
+all:	$(BUILDDIRS)
+
+install:	all $(INSTALLDIRS)
+
+clean:	$(CLEANDIRS)
+
+$(BUILDDIRS): $(TARGET_PATH)
+	$(MAKE) -C $(@:build-%=%) all
+
+$(CLEANDIRS): $(TARGET_PATH)
+	$(MAKE) -C $(@:clean-%=%) clean
+
+$(INSTALLDIRS): $(TARGET_PATH)
+	$(MAKE) -C $(@:install-%=%) install
+.PHONY: clean install all
diff --git a/clients/Makefile b/clients/Makefile
new file mode 100644
index 0000000..3c0f6bd
--- /dev/null
+++ b/clients/Makefile
@@ -0,0 +1,18 @@
+SOURCES=$(shell find src/main -name "*.java")
+
+TARGET_PATH=$(CURDIR)/target
+CLASSPATH:=$(CLASSPATH):$(TARGET_PATH)
+
+$(TARGET_PATH):
+	$(MKDIR_P) $(TARGET_PATH)
+
+all:	$(SOURCES) $(TARGET_PATH)
+	$(JAVAC) -d $(TARGET_PATH) $(SOURCES)
+
+clean:
+	$(RM_RF) $(TARGET_PATH)
+	$(RM_RF) kafka-clients-$(VERSION).jar
+
+install:	all
+	$(JAR) cfv kafka-clients-$(VERSION).jar -C target .
+	$(INSTALL) -o root -g root kafka-clients-$(VERSION).jar $(DESTDIR)$(LIBPATH)/kafka-clients-$(VERSION).jar
diff --git a/config/Makefile b/config/Makefile
new file mode 100644
index 0000000..f78a68d
--- /dev/null
+++ b/config/Makefile
@@ -0,0 +1,15 @@
+CONFFILES=log4j.properties tools-log4j.properties server.properties zookeeper.properties
+MIRROR_CONFFILES=consumer.properties producer.properties
+MIRROR_CONFFILES_EXAMPLES=$(MIRROR_CONFFILES:.properties=.properties.example)
+
+all:
+
+clean:
+
+install:	all $(MIRROR_CONFFILES_EXAMPLES)
+	$(MKDIR_P) $(DESTDIR)/$(SYSCONFDIR)
+	$(INSTALL) -o root -g root $(CONFFILES) $(DESTDIR)/$(SYSCONFDIR)
+	$(MKDIR_P) $(DESTDIR)/$(SYSCONFDIR)/mirror
+%.properties.example:  %.properties
+	$(MKDIR_P) $(DESTDIR)/$(SYSCONFDIR)/mirror
+	$(INSTALL) -T -o root -g root $< $(DESTDIR)/$(SYSCONFDIR)/mirror/$@
diff --git a/core/Makefile b/core/Makefile
new file mode 100644
index 0000000..2c107e2
--- /dev/null
+++ b/core/Makefile
@@ -0,0 +1,21 @@
+SOURCES=$(shell find src/main -name "*.scala" -or -name "*.java")
+JAVA_SOURCES=$(shell find src/main -name "*.java")
+
+TARGET_PATH=$(CURDIR)/target
+CLIENTS_TARGET_PATH=$(dir $(CURDIR))clients/target
+CLASSPATH:=$(CLASSPATH):$(CLIENTS_TARGET_PATH):$(TARGET_PATH)
+
+$(TARGET_PATH):
+	$(MKDIR_P) $(TARGET_PATH)
+
+all:	$(SOURCES) $(TARGET_PATH)
+	$(SCALAC) $(CFLAGS) -d $(TARGET_PATH) $(SOURCES)
+	$(JAVAC) -d $(TARGET_PATH) $(JAVA_SOURCES)
+
+clean:
+	$(RM_RF) $(TARGET_PATH)
+	$(RM_RF) kafka-$(VERSION).jar
+
+install:
+	$(JAR) cfv kafka-$(VERSION).jar -C target .
+	$(INSTALL) -o root -g root kafka-$(VERSION).jar $(DESTDIR)$(LIBPATH)/kafka-$(VERSION).jar
--
